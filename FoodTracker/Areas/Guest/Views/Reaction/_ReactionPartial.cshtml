@model ReactionVM

@{
    var fid = Model.ActiveFood.Id;
    var safeFood = @Model.ActiveFood.UserSafeFoods.Count() == 1;
}

<h4 id="reactionFocusHeader" class="@(safeFood ? "green" : "")">@Model.ActiveFood.Name</h4>

<form id="foodReactionContainer" method="post" class="row" enctype="multipart/form-data" data-bs-theme="dark">

    @* <div class="d-flex justify-content-end"> *@

        <div id="foodReactiveCheck" class="form-check d-flex py-1 col-12">
        <input id="userSafeFoodInput" type="checkbox" onclick="updateUserSafeFood(@Model.ActiveFood.Id)" @(safeFood ? "checked" : "") />
        <label class="form-check-label ms-2">Food is Non-Reactive</label>
    </div>
    @* </div> *@
    
    <div id="reactionPicker" class="card-body p-4 col-12 @(safeFood ? "hidden" : "")">
        <div class="row">
            <div class="col-12">
                <div class="p-12">
                    <div id="dayReactionPicker" class="d-flex align-items-start">
                        <div class="nav flex-column nav-pills me-3" id="v-pills-tab" role="tablist" aria-orientation="vertical">

                            @for (int i = 0; i < Model.Categories.Keys.Count; i++)
                            {
                                var category = Model.Categories.Keys.ToList()[i];
                                <button class="nav-link @(i == 0 ? "active" : "") " id="v-pills-@i-tab" data-bs-toggle="pill" data-bs-target="#v-pills-@i" type="button" role="tab" aria-controls="v-pills-@i" aria-selected="true">@category</button>

                            }
                        </div>
                        <div class="tab-content">

                            @for (int i = 0; i < Model.Categories.Keys.Count; i++)
                            {
                                var category = Model.Categories.Keys.ToList()[i];
                                <div class="tab-pane fade @(i == 0 ? "show active" : "")" id="v-pills-@i" role="tabpanel" aria-labelledby="v-pills-@i-tab">
                                    <div>
                                        @foreach (var r in Model.Categories[category])
                                        {
                                            <div class="px-3 py-2">
                                                <div>
                                                    <h5>@r.Name</h5>
                                                </div>
                                                <div class="d-flex">

                                                    @foreach (var s in Model.Severities)
                                                    {
                                                        var divId = $"{fid}-{r.Id}-{s.Id}";
                                                        var reactions = Model.ExistingReactions;
                                                        int activeSeverity = 0;

                                                        _ = (reactions.ContainsKey(fid) && reactions[fid].TryGetValue(r.Id, out activeSeverity));

                                                        <div id="@divId" class="d-flex px-2 pt-1 form-check-parent" onmouseup="updateReaction('@divId')">
                                                            <div class="form-check py-2 col-12">
                                                                <input @(activeSeverity == s.Id ? "checked" : "") type="radio" name="radioGroup-@(category)-@(r.Id)" id="radio@(divId)" value="@(divId)">
                                                                <label class="form-check-label" for="radio@(divId)">
                                                                    @s.Name
                                                                </label>
                                                            </div>
                                                        </div>
                                                    }
                                                </div>
                                            </div>
                                        }
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</form>

