@model DayReactionVM

@{
    var dayId = Model.DateTime.Date;
    var format = SD.DATE_FORMAT;
    var hideOnSafeDay = Model.IsUserSafe ? "d-none" : "";

}

<div class="col-12">

    <h5>@dayId.ToShortDateString() Reactions</h5>

    @* <div class="d-flex justify-content-end col-12"> *@

        <div class="form-check py-3">
            <input id="userSafeDayInput" type="checkbox" onclick="updateUserSafeDay('@Model.DateTime.Date.ToString(format)')" @(Model.IsUserSafe ? "checked" : "") />
            <label class="form-check-label ms-2">No issues today!</label>
        </div>
    @* </div> *@
    <div id="dayReactionPicker" class="d-flex align-items-start">
        <div class="nav flex-column nav-pills me-3 @(hideOnSafeDay)" id="v-pills-tab" role="tablist" aria-orientation="vertical">

            @for (int i = 0; i < Model.Categories.Keys.Count; i++)
            {
                var category = Model.Categories.Keys.ToList()[i];
                <button class="nav-link @(i == 0 ? "active" : "") " id="v-pills-@i-tab" data-bs-toggle="pill" data-bs-target="#v-pills-@i" type="button" role="tab" aria-controls="v-pills-@i" aria-selected="true">@category</button>

            }
        </div>

        <div class="tab-content @(hideOnSafeDay)">

            @for (int i = 0; i < Model.Categories.Keys.Count; i++)
            {
                var category = Model.Categories.Keys.ToList()[i];

                <div class="tab-pane fade @(i == 0 ? "show active" : "")" id="v-pills-@i" role="tabpanel" aria-labelledby="v-pills-@i-tab">
                    <div>
                        @foreach (var r in Model.Categories[category])
                        {
                            <div class="px-3 py-2">
                                <div>
                                    <h5>@r.Name</h5>
                                </div>
                                <div class="d-flex">

                                    @foreach (var s in Model.Severities)
                                    {
                                        var divId = $"{dayId.ToString(format)}_{r.Id}_{s.Id}";
                                        var reactions = Model.ExistingReactions;
                                        int activeSeverity = 0;

                                        _ = (reactions.ContainsKey(dayId) && reactions[dayId].TryGetValue(r.Id, out activeSeverity));

                                        <div id="@divId" class="d-flex px-2 pt-1 form-check-parent" onmouseup="updateReaction('@divId')">
                                            <div class="form-check">
                                                <input @(activeSeverity == s.Id ? "checked" : "") type="radio" name="radioGroup-@(category)-@(r.Id)" id="radio@(divId)" value="@(divId)">
                                                <label class="form-check-label" for="radio@(divId)">
                                                    @s.Name
                                                </label>
                                            </div>
                                        </div>
                                    }
                                </div>
                            </div>
                        }
                    </div>
                </div>
            }
        </div>
    </div>
</div>
